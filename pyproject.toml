[build-system]
requires = ["setuptools>=63", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "AxonDeepSeg"
dynamic = ["version"]
description = "Axon/Myelin segmentation using AI"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [{"name" = "NeuroPoly Lab, Polytechnique Montreal", "email" = "axondeepseg@googlegroups.com"}
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Image Processing",
]

dependencies =[
    "numpy<2",
    "scipy",
    "scikit-image",
    "tabulate",
    "pandas",
    "matplotlib",
    "mpld3",
    "tqdm",
    "requests",
    "pillow!=9.0.0",
    "imageio>=2.28.0",
    "pytest",
    "pytest-cov",
    "prettytable",
    "jupyter",
    "openpyxl",
    "qtconsole<5.4.2",
    "napari[all]",
    "acvl_utils!=0.2.1",
    "nnunetv2==2.2.1",
    "loguru",
    "torch<2.4.0",
    "pydicom<3",
    "pytest-qt",
    "magicgui",
    "qtpy"
]

keywords = ["axon", "myelin", "segmentation", "microscopy"]

[project.optional-dependencies]
testing = [
    "tox",
    "pytest",  # https://docs.pytest.org/en/latest/contents.html
    "pytest-cov",  # https://pytest-cov.readthedocs.io/en/latest/
    "pytest-qt",  # https://pytest-qt.readthedocs.io/en/latest/
    "napari",
    "pyqt5",
]

[project.entry-points."napari.manifest"]
AxonDeepSeg = "AxonDeepSeg.ads_napari:napari.yaml"

[project.urls]
"Homepage" = "https://github.com/neuropoly/axondeepseg"
"Bug Tracker" = "https://github.com/axondeepseg/axondeepseg/issues"
"Documentation" = "https://github.com/axondeepseg/axondeepseg#README.md"
"Source Code" = "https://github.com/axondeepseg/axondeepseg"
"User Support" = "https://github.com/axondeepseg/axondeepseg/issues"

[project.scripts]
download_model = "AxonDeepSeg.download_model:main"
download_tests = "AxonDeepSeg.download_tests:main"
axondeepseg = "AxonDeepSeg.segment:main"
axondeepseg_test = "AxonDeepSeg.integrity_test:main"
axondeepseg_morphometrics = "AxonDeepSeg.morphometrics.launch_morphometrics_computation:main"

[tool.setuptools]
packages = ["AxonDeepSeg"]
package-dir = {AxonDeepSeg = "AxonDeepSeg"}
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.yaml"]
AxonDeepSeg = [
    "models/default_SEM_model/*",
    "models/default_TEM_model/*",
    "models/default_BF_model/*",
    "data_test/*",
    "version.txt",
]

[tool.setuptools.dynamic]
version = {attr = "AxonDeepSeg.__init__.__version__"}

[tool.black]
line-length = 79
target-version = ['py38', 'py39', 'py310']

[tool.ruff]
line-length = 79
lint.select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "E501", # line too long. let black handle this
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
    "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

target-version = ["py311", "py311", "py313"]
fix = true
